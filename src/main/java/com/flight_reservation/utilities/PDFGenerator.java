package com.flight_reservation.utilities;

import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.util.Date;

import org.springframework.stereotype.Component;

import com.flight_reservation.entity.Reservation;
import com.itextpdf.text.Chunk;
import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Element;
import com.itextpdf.text.Font;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.Phrase;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;

@Component
public class PDFGenerator {
	
	public void generateItinerary(Reservation reservation, String filePath ) {
        try {
            Document document = new Document();
            PdfWriter.getInstance(document, new FileOutputStream(filePath));
            
            document.open();
            
            Paragraph p = new Paragraph();
            
            p.add("Flight Booking Ticket");
            p.setAlignment(Element.ALIGN_CENTER);
            document.add(p);
            
            document.add(Chunk.NEWLINE); //giving space in PDF page
            document.add(Chunk.NEWLINE); //giving space in PDF page
            
            Font f = new Font();
            f.setStyle(Font.BOLD);
            f.setSize(8);

            document.add(new Paragraph("Report generated by: " + "Flight Reservation Company" + ", " + new Date(), f));
            
            document.add(Chunk.NEWLINE); //giving space in PDF page
            
            document.add(generateTable(reservation));
            
            document.close();
        } catch (FileNotFoundException | DocumentException e) {
            e.printStackTrace();
        }
    }
	

    private PdfPTable generateTable(Reservation reservation ) {
    	
        PdfPTable table = new PdfPTable(2); //creating table with 2 columns
        PdfPCell cell; //In the table to add a cell you need to create a reference variable of type cell
        table.setWidthPercentage(100); //cover the complete page
        
        cell = new PdfPCell(new Phrase("Flight Itinerary"));
        cell.setHorizontalAlignment(Element.ALIGN_CENTER); //keep Flight Itinerary in center
        cell.setColspan(2); //Merge both the cells(columns) and after merging Flight Itinerary should be present in that.
        table.addCell(cell); //Adding that cell to the table
        
        cell = new PdfPCell(new Phrase("Flight Details")); //Creating other Cell. We are using the same reference cell here.
        cell.setColspan(2); //Merge both the cells(columns)
        table.addCell(cell);
        
        table.addCell("Departure City");
        table.addCell(reservation.getFlight().getDepartureCity());
        
        table.addCell("Arrival City");
        table.addCell(reservation.getFlight().getArrivalCity());
        
        table.addCell("Flight Number");
        table.addCell(reservation.getFlight().getFlightNumber());
        
        table.addCell("Operating Airline");
        table.addCell(reservation.getFlight().getOperatingAirlines());
        
        table.addCell("Departure Date");
        table.addCell(reservation.getFlight().getDateOfDeparture().toString());
        
        table.addCell("Departure Time");
        table.addCell(reservation.getFlight().getEstimatedDepartureTime().toString());
        
        cell = new PdfPCell(new Phrase("Passenger Details"));
        cell.setColspan(2); //Merge both the cells(columns)
        table.addCell(cell);
        
        table.addCell("First Name");
        table.addCell(reservation.getPassenger().getFirstName());
        
        table.addCell("Last Name");
        table.addCell(reservation.getPassenger().getLastName());
        
        table.addCell("Email");
        table.addCell(reservation.getPassenger().getEmail());
        
        table.addCell("Mobile Number");
        table.addCell(reservation.getPassenger().getPhone());
        
        return table;
    }     
       
}


